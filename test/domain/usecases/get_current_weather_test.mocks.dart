// Mocks generated by Mockito 5.4.5 from annotations
// in assessmentfounder/test/domain/usecases/get_current_weather_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:assessmentfounder/core/errors/failures.dart' as _i5;
import 'package:assessmentfounder/domain/entities/current_weather.dart' as _i6;
import 'package:assessmentfounder/domain/entities/forecast.dart' as _i7;
import 'package:assessmentfounder/domain/repositories/weather_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CurrentWeather>>
      getCurrentWeatherByCity(String? city) => (super.noSuchMethod(
            Invocation.method(
              #getCurrentWeatherByCity,
              [city],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.CurrentWeather>>.value(
                    _FakeEither_0<_i5.Failure, _i6.CurrentWeather>(
              this,
              Invocation.method(
                #getCurrentWeatherByCity,
                [city],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CurrentWeather>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CurrentWeather>>
      getCurrentWeatherByCoordinates(
    double? latitude,
    double? longitude,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #getCurrentWeatherByCoordinates,
              [
                latitude,
                longitude,
              ],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i6.CurrentWeather>>.value(
                    _FakeEither_0<_i5.Failure, _i6.CurrentWeather>(
              this,
              Invocation.method(
                #getCurrentWeatherByCoordinates,
                [
                  latitude,
                  longitude,
                ],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CurrentWeather>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Forecast>> getForecastByCity(
          String? city) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForecastByCity,
          [city],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Forecast>>.value(
            _FakeEither_0<_i5.Failure, _i7.Forecast>(
          this,
          Invocation.method(
            #getForecastByCity,
            [city],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Forecast>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Forecast>> getForecastByCoordinates(
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForecastByCoordinates,
          [
            latitude,
            longitude,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Forecast>>.value(
            _FakeEither_0<_i5.Failure, _i7.Forecast>(
          this,
          Invocation.method(
            #getForecastByCoordinates,
            [
              latitude,
              longitude,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Forecast>>);

  @override
  _i4.Future<List<String>> getLastSearchedCities() => (super.noSuchMethod(
        Invocation.method(
          #getLastSearchedCities,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<void> saveToSearchHistory(String? city) => (super.noSuchMethod(
        Invocation.method(
          #saveToSearchHistory,
          [city],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearSearchHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearSearchHistory,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<String>> getFavoriteLocations() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteLocations,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<void> addToFavorites(String? city) => (super.noSuchMethod(
        Invocation.method(
          #addToFavorites,
          [city],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeFromFavorites(String? city) => (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorites,
          [city],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
